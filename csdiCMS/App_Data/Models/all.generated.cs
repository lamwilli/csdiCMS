using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "a2bac2f540cd1922")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1095 with alias "USN_CMP_IntroOutro"
	/// <summary>Advanced Component Intro/Outro</summary>
	public partial interface IUsn_Cmp_IntroOutro : IPublishedContent
	{
		/// <summary>Heading</summary>
		USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading { get; }

		/// <summary>Text</summary>
		IHtmlString IntroductionText { get; }

		/// <summary>Links</summary>
		Umbraco.Web.Models.RelatedLinks OutroLinks { get; }

		/// <summary>Text</summary>
		IHtmlString OutroText { get; }
	}

	/// <summary>Advanced Component Intro/Outro</summary>
	[PublishedContentModel("USN_CMP_IntroOutro")]
	public partial class Usn_Cmp_IntroOutro : PublishedContentModel, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_IntroOutro";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_IntroOutro(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_IntroOutro, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return GetIntroductionHeading(this); }
		}

		/// <summary>Static getter for Heading</summary>
		public static USNStarterKit.USNHeading.Models.USNHeading GetIntroductionHeading(IUsn_Cmp_IntroOutro that) { return that.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("introductionHeading"); }

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return GetIntroductionText(this); }
		}

		/// <summary>Static getter for Text</summary>
		public static IHtmlString GetIntroductionText(IUsn_Cmp_IntroOutro that) { return that.GetPropertyValue<IHtmlString>("introductionText"); }

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return GetOutroLinks(this); }
		}

		/// <summary>Static getter for Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetOutroLinks(IUsn_Cmp_IntroOutro that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("outroLinks"); }

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return GetOutroText(this); }
		}

		/// <summary>Static getter for Text</summary>
		public static IHtmlString GetOutroText(IUsn_Cmp_IntroOutro that) { return that.GetPropertyValue<IHtmlString>("outroText"); }
	}

	// Mixin content Type 1096 with alias "USN_CMP_AdvancedPageSettings"
	/// <summary>Advanced Page Settings</summary>
	public partial interface IUsn_Cmp_AdvancedPageSettings : IPublishedContent
	{
		/// <summary>Animate</summary>
		bool Animate { get; }

		/// <summary>Instructions</summary>
		object ApsInstructions { get; }

		/// <summary>Background color</summary>
		string BackgroundColor { get; }

		/// <summary>Background image</summary>
		IPublishedContent BackgroundImage { get; }

		/// <summary>Background image options</summary>
		USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions { get; }

		/// <summary>Component width</summary>
		string Width { get; }
	}

	/// <summary>Advanced Page Settings</summary>
	[PublishedContentModel("USN_CMP_AdvancedPageSettings")]
	public partial class Usn_Cmp_AdvancedPageSettings : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_AdvancedPageSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_AdvancedPageSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_AdvancedPageSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return GetAnimate(this); }
		}

		/// <summary>Static getter for Animate</summary>
		public static bool GetAnimate(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue<bool>("animate"); }

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return GetApsInstructions(this); }
		}

		/// <summary>Static getter for Instructions</summary>
		public static object GetApsInstructions(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue("apsInstructions"); }

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return GetBackgroundColor(this); }
		}

		/// <summary>Static getter for Background color</summary>
		public static string GetBackgroundColor(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue<string>("backgroundColor"); }

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return GetBackgroundImage(this); }
		}

		/// <summary>Static getter for Background image</summary>
		public static IPublishedContent GetBackgroundImage(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue<IPublishedContent>("backgroundImage"); }

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return GetBackgroundImageOptions(this); }
		}

		/// <summary>Static getter for Background image options</summary>
		public static USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption GetBackgroundImageOptions(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return GetWidth(this); }
		}

		/// <summary>Static getter for Component width</summary>
		public static string GetWidth(IUsn_Cmp_AdvancedPageSettings that) { return that.GetPropertyValue<string>("width"); }
	}

	// Mixin content Type 1097 with alias "USN_CMP_CustomComponentClasses"
	/// <summary>Custom Component Classes</summary>
	public partial interface IUsn_Cmp_CustomComponentClasses : IPublishedContent
	{
		/// <summary>Custom component classes</summary>
		string CustomComponentClasses { get; }
	}

	/// <summary>Custom Component Classes</summary>
	[PublishedContentModel("USN_CMP_CustomComponentClasses")]
	public partial class Usn_Cmp_CustomComponentClasses : PublishedContentModel, IUsn_Cmp_CustomComponentClasses
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_CustomComponentClasses";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_CustomComponentClasses(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_CustomComponentClasses, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return GetCustomComponentClasses(this); }
		}

		/// <summary>Static getter for Custom component classes</summary>
		public static string GetCustomComponentClasses(IUsn_Cmp_CustomComponentClasses that) { return that.GetPropertyValue<string>("customComponentClasses"); }
	}

	// Mixin content Type 1098 with alias "USN_CMP_DisableDelete"
	/// <summary>Disable Delete</summary>
	public partial interface IUsn_Cmp_DisableDelete : IPublishedContent
	{
		/// <summary>Disable delete</summary>
		bool DisableDelete { get; }
	}

	/// <summary>Disable Delete</summary>
	[PublishedContentModel("USN_CMP_DisableDelete")]
	public partial class Usn_Cmp_DisableDelete : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_DisableDelete";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_DisableDelete(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_DisableDelete, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return GetDisableDelete(this); }
		}

		/// <summary>Static getter for Disable delete</summary>
		public static bool GetDisableDelete(IUsn_Cmp_DisableDelete that) { return that.GetPropertyValue<bool>("disableDelete"); }
	}

	/// <summary>Accordion/Tab Item</summary>
	[PublishedContentModel("USN_SC_AccordionTabItem")]
	public partial class Usn_Sc_AccordionTabItem : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_AccordionTabItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_AccordionTabItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_AccordionTabItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Accordion/Tab Item{i class="icon sprTree icon-repeat color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be displayed as the "Item Heading".{/p}{p}For example, if using this for a Question/Answer the name you enter will be displayed as the "Question". If you have chosen the "Tabbed" style the name will be used as the "Tab Heading".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("repeaterText")]
		public IHtmlString RepeaterText
		{
			get { return this.GetPropertyValue<IHtmlString>("repeaterText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Accordion/Tabbed Section</summary>
	[PublishedContentModel("USN_SC_AccordionTabSection_AN")]
	public partial class Usn_Sc_AccordionTabSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_AccordionTabSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_AccordionTabSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_AccordionTabSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Accordion/Tabbed Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Accordion/Tab Item" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Layout
		///</summary>
		[ImplementPropertyType("repeaterStyle")]
		public string RepeaterStyle
		{
			get { return this.GetPropertyValue<string>("repeaterStyle"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Advanced Page Components Folder</summary>
	[PublishedContentModel("USNAdvancedPageComponents")]
	public partial class UsnadvancedPageComponents : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Page Components{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add components below this folder to organise the layout and content of your page.{/p}{p}The order of your components within this folder directly relates to the order your components will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your components.{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Alert Box</summary>
	[PublishedContentModel("USN_SC_Alert_AN")]
	public partial class Usn_Sc_Alert_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Alert_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Alert_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Alert_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Colour
		///</summary>
		[ImplementPropertyType("alertColour")]
		public string AlertColour
		{
			get { return this.GetPropertyValue<string>("alertColour"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("alertText")]
		public IHtmlString AlertText
		{
			get { return this.GetPropertyValue<IHtmlString>("alertText"); }
		}

		///<summary>
		/// Hide close option
		///</summary>
		[ImplementPropertyType("hideCloseOption")]
		public bool HideCloseOption
		{
			get { return this.GetPropertyValue<bool>("hideCloseOption"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Alert Box{i class="icon sprTree icon-alert-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("USN_AC_Banner")]
	public partial class Usn_Ac_Banner : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return this.GetPropertyValue<bool>("addColorOverlay"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("bannerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading BannerHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("bannerHeading"); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("bannerImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("bannerImageAltText")]
		public string BannerImageAltText
		{
			get { return this.GetPropertyValue<string>("bannerImageAltText"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("bannerLink")]
		public Umbraco.Web.Models.RelatedLinks BannerLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("bannerLink"); }
		}

		///<summary>
		/// Banner style
		///</summary>
		[ImplementPropertyType("bannerStyle")]
		public string BannerStyle
		{
			get { return this.GetPropertyValue<string>("bannerStyle"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("bannerText")]
		public IHtmlString BannerText
		{
			get { return this.GetPropertyValue<IHtmlString>("bannerText"); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("bannerTextAlignment")]
		public string BannerTextAlignment
		{
			get { return this.GetPropertyValue<string>("bannerTextAlignment"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Banner{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("parallax")]
		public bool Parallax
		{
			get { return this.GetPropertyValue<bool>("parallax"); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("scrollPrompt")]
		public bool ScrollPrompt
		{
			get { return this.GetPropertyValue<bool>("scrollPrompt"); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return this.GetPropertyValue<IPublishedContent>("video"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Banner Section</summary>
	[PublishedContentModel("USN_AC_BannerSection_AN")]
	public partial class Usn_Ac_BannerSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_BannerSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_BannerSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_BannerSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Auto rotate speed: Enter a number here in milliseconds to enable auto rotation (e.g. 1000 = 1 second).
		///</summary>
		[ImplementPropertyType("autoRotateSpeed")]
		public int AutoRotateSpeed
		{
			get { return this.GetPropertyValue<int>("autoRotateSpeed"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Banner Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Banner" below this folder.{/p}{p}The order of your "items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blockquote</summary>
	[PublishedContentModel("USN_SC_Blockquote_AN")]
	public partial class Usn_Sc_Blockquote_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_Blockquote_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_Blockquote_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_Blockquote_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blockquote{i class="icon sprTree icon-quote color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blockquote Pod</summary>
	[PublishedContentModel("USN_SWP_BlockquotePod")]
	public partial class Usn_Swp_BlockquotePod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_BlockquotePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_BlockquotePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_BlockquotePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cite
		///</summary>
		[ImplementPropertyType("cite")]
		public string Cite
		{
			get { return this.GetPropertyValue<string>("cite"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blockquote Pod{i class="icon sprTree icon-quote color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("quote")]
		public string Quote
		{
			get { return this.GetPropertyValue<string>("quote"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Author</summary>
	[PublishedContentModel("USNBlogAuthor")]
	public partial class UsnblogAuthor : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthor";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthor(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthor, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author bio: The author bio will appear below every blog post associated with this author and should contain a short snippet about the author.
		///</summary>
		[ImplementPropertyType("authorBio")]
		public IHtmlString AuthorBio
		{
			get { return this.GetPropertyValue<IHtmlString>("authorBio"); }
		}

		///<summary>
		/// Author image: Image will be cropped to 200px x 200px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("authorImage")]
		public IPublishedContent AuthorImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("authorImage"); }
		}

		///<summary>
		/// Author page: Use this to link to the authors page which could be an external blog or a page on this website. If something is entered here the authors name on blog listings and blog post pages will link to this page.    The 'Caption' field will be ignored however you must enter something in order to save this link.
		///</summary>
		[ImplementPropertyType("authorPage")]
		public Umbraco.Web.Models.RelatedLinks AuthorPage
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("authorPage"); }
		}

		///<summary>
		/// Behance link
		///</summary>
		[ImplementPropertyType("behanceLink")]
		public string BehanceLink
		{
			get { return this.GetPropertyValue<string>("behanceLink"); }
		}

		///<summary>
		/// Facebook link
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Flickr link
		///</summary>
		[ImplementPropertyType("flickrLink")]
		public string FlickrLink
		{
			get { return this.GetPropertyValue<string>("flickrLink"); }
		}

		///<summary>
		/// Google+ link
		///</summary>
		[ImplementPropertyType("googleLink")]
		public string GoogleLink
		{
			get { return this.GetPropertyValue<string>("googleLink"); }
		}

		///<summary>
		/// Instagram link
		///</summary>
		[ImplementPropertyType("instagramLink")]
		public string InstagramLink
		{
			get { return this.GetPropertyValue<string>("instagramLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Author{i class="icon sprTree icon-user-glasses color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be used for the "Author Name" displayed on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("insttructions")]
		public object Insttructions
		{
			get { return this.GetPropertyValue("insttructions"); }
		}

		///<summary>
		/// LinkedIn link
		///</summary>
		[ImplementPropertyType("linkedInLink")]
		public string LinkedInLink
		{
			get { return this.GetPropertyValue<string>("linkedInLink"); }
		}

		///<summary>
		/// Pinterest link
		///</summary>
		[ImplementPropertyType("pinterestLink")]
		public string PinterestLink
		{
			get { return this.GetPropertyValue<string>("pinterestLink"); }
		}

		///<summary>
		/// SoundCloud link
		///</summary>
		[ImplementPropertyType("soundCloudLink")]
		public string SoundCloudLink
		{
			get { return this.GetPropertyValue<string>("soundCloudLink"); }
		}

		///<summary>
		/// Tumblr link
		///</summary>
		[ImplementPropertyType("tumblrLink")]
		public string TumblrLink
		{
			get { return this.GetPropertyValue<string>("tumblrLink"); }
		}

		///<summary>
		/// Twitter link
		///</summary>
		[ImplementPropertyType("twitterLink")]
		public string TwitterLink
		{
			get { return this.GetPropertyValue<string>("twitterLink"); }
		}

		///<summary>
		/// Vimeo link
		///</summary>
		[ImplementPropertyType("vimeoLink")]
		public string VimeoLink
		{
			get { return this.GetPropertyValue<string>("vimeoLink"); }
		}

		///<summary>
		/// YouTube link
		///</summary>
		[ImplementPropertyType("youTubeLink")]
		public string YouTubeLink
		{
			get { return this.GetPropertyValue<string>("youTubeLink"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Authors Folder</summary>
	[PublishedContentModel("USNBlogAuthors")]
	public partial class UsnblogAuthors : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogAuthors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogAuthors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogAuthors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Authors{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Create items below this folder to add new "Blog Authors".{/p}  {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Categories Folder</summary>
	[PublishedContentModel("USNBlogCategories")]
	public partial class UsnblogCategories : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategories";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategories(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategories, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Categories{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Create items below this folder to add new "Blog Categories".{/p}  {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Month Folder</summary>
	[PublishedContentModel("USNBlogMonthFolder")]
	public partial class UsnblogMonthFolder : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogMonthFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogMonthFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogMonthFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Month Folder{i class="icon sprTree icon-calendar-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This folder is created automatically based on your blog posts.{/p}{p}Below this folder you will find your "Blog Posts".{/p}{p}"Blog Posts" must be added to the "Blog Posts Folder"   above.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Month
		///</summary>
		[ImplementPropertyType("month")]
		public object Month
		{
			get { return this.GetPropertyValue("month"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Posts Folder</summary>
	[PublishedContentModel("USNBlogPostsFolder")]
	public partial class UsnblogPostsFolder : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogPostsFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogPostsFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogPostsFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Posts Folder{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add your "Blog Posts" below this folder. "Year" and "Month" folders are created automatically based on your "Blog post date".{/p}{p}Your "Blog Post" will be moved into the correct folder when saved.{/p}  {p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog RSS</summary>
	[PublishedContentModel("USNBlogRSS")]
	public partial class UsnblogRss : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogRSS";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogRss(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogRss, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog RSS{i class="icon sprTree icon-rss color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will display the RSS feed for your blog posts.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Copyright
		///</summary>
		[ImplementPropertyType("rssCopyright")]
		public string RssCopyright
		{
			get { return this.GetPropertyValue<string>("rssCopyright"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("rssDescription")]
		public string RssDescription
		{
			get { return this.GetPropertyValue<string>("rssDescription"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("rssTitle")]
		public string RssTitle
		{
			get { return this.GetPropertyValue<string>("rssTitle"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Blog Year Folder</summary>
	[PublishedContentModel("USNBlogYearFolder")]
	public partial class UsnblogYearFolder : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogYearFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogYearFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogYearFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Year Folder{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This folder is created automatically based on your blog posts.{/p}{p}Below this folder you will find "Month" folders containing your "Blog Posts".{/p}{p}"Blog Posts" must be added to the "Blog Posts Folder"   above.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Year
		///</summary>
		[ImplementPropertyType("year")]
		public object Year
		{
			get { return this.GetPropertyValue("year"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Call to Action Strip</summary>
	[PublishedContentModel("USN_AC_CTAStrip_AN")]
	public partial class Usn_Ac_Ctastrip_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_CTAStrip_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Ctastrip_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Ctastrip_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Call to Action Strip{i class="icon sprTree icon-megaphone color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("link")]
		public Umbraco.Web.Models.RelatedLinks Link
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("link"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Code Pod</summary>
	[PublishedContentModel("USN_SWP_CodePod")]
	public partial class Usn_Swp_CodePod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_CodePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_CodePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_CodePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Code Pod{i class="icon sprTree icon-code color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Code Section</summary>
	[PublishedContentModel("USN_SC_CodeSection_AN")]
	public partial class Usn_Sc_CodeSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_CodeSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_CodeSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_CodeSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Code: Enter your raw code here. This can be JavaScript, HTML etc.
		///</summary>
		[ImplementPropertyType("code")]
		public string Code
		{
			get { return this.GetPropertyValue<string>("code"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Code Section{i class="icon sprTree icon-code color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Contact Form</summary>
	[PublishedContentModel("USN_SC_ContactForm_AN")]
	public partial class Usn_Sc_ContactForm_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ContactForm_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ContactForm_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ContactForm_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("contactFormButtonText")]
		public string ContactFormButtonText
		{
			get { return this.GetPropertyValue<string>("contactFormButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("contactFormHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading ContactFormHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("contactFormHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("contactFormIntroduction")]
		public IHtmlString ContactFormIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("contactFormIntroduction"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Contact Form{i class="icon sprTree icon-paper-plane-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Recipient Email address
		///</summary>
		[ImplementPropertyType("recipientEmailAddress")]
		public string RecipientEmailAddress
		{
			get { return this.GetPropertyValue<string>("recipientEmailAddress"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Featured Blog Posts Section</summary>
	[PublishedContentModel("USN_AC_FeaturedBlogPostsSection_AN")]
	public partial class Usn_Ac_FeaturedBlogPostsSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_FeaturedBlogPostsSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_FeaturedBlogPostsSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_FeaturedBlogPostsSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Auto rotate speed: Enter a number here in milliseconds to enable auto rotation (e.g. 1000 = 1 second).
		///</summary>
		[ImplementPropertyType("autoRotateSpeed")]
		public int AutoRotateSpeed
		{
			get { return this.GetPropertyValue<int>("autoRotateSpeed"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Featured Blog Posts Section{i class="icon sprTree icon-rate color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Posts: Select the blog posts you would like to be included in this component.
		///</summary>
		[ImplementPropertyType("posts")]
		public IEnumerable<IPublishedContent> Posts
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("posts"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionHeading(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionText(this); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroLinks(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroText(this); }
		}
	}

	/// <summary>Gallery Image</summary>
	[PublishedContentModel("USN_SC_GalleryImage")]
	public partial class Usn_Sc_GalleryImage : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable light window
		///</summary>
		[ImplementPropertyType("disableLightWindow")]
		public bool DisableLightWindow
		{
			get { return this.GetPropertyValue<bool>("disableLightWindow"); }
		}

		///<summary>
		/// Image link: Link will only be used if light window is disabled.    The "Caption" field will be ignored however you must enter something in order to save this link.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public Umbraco.Web.Models.RelatedLinks ImageLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("imageLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 400px x 300px and displayed as the gallery thumbnail.    Focal point of the image is defined within your "Media" section.    The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public IPublishedContent LightWindowImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("lightWindowImage"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Gallery Section</summary>
	[PublishedContentModel("USN_SC_GallerySection_AN")]
	public partial class Usn_Sc_GallerySection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GallerySection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GallerySection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GallerySection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Gallery Image" or "Gallery Video" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Gallery Video</summary>
	[PublishedContentModel("USN_SC_GalleryVideo")]
	public partial class Usn_Sc_GalleryVideo : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_GalleryVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_GalleryVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_GalleryVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.    Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("galleryThumbnailImage")]
		public IPublishedContent GalleryThumbnailImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("galleryThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("galleryVideo")]
		public string GalleryVideo
		{
			get { return this.GetPropertyValue<string>("galleryVideo"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Gallery Video{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>General Pod</summary>
	[PublishedContentModel("USN_SWP_GeneralPod")]
	public partial class Usn_Swp_GeneralPod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_GeneralPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_GeneralPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_GeneralPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}General Pod{i class="icon sprTree icon-disc color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podHeading")]
		public string PodHeading
		{
			get { return this.GetPropertyValue<string>("podHeading"); }
		}

		///<summary>
		/// Link
		///</summary>
		[ImplementPropertyType("podLink")]
		public Umbraco.Web.Models.RelatedLinks PodLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("podLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Global Settings</summary>
	[PublishedContentModel("USNGlobalSettings")]
	public partial class UsnglobalSettings : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNGlobalSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnglobalSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnglobalSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Accept cookies button text
		///</summary>
		[ImplementPropertyType("acceptCookiesButtonText")]
		public string AcceptCookiesButtonText
		{
			get { return this.GetPropertyValue<string>("acceptCookiesButtonText"); }
		}

		///<summary>
		/// Address
		///</summary>
		[ImplementPropertyType("address")]
		public IHtmlString Address
		{
			get { return this.GetPropertyValue<IHtmlString>("address"); }
		}

		///<summary>
		/// After opening body scripts: Anything you enter here will be placed after the opening &lt;body&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("afterOpeningBodyScripts")]
		public string AfterOpeningBodyScripts
		{
			get { return this.GetPropertyValue<string>("afterOpeningBodyScripts"); }
		}

		///<summary>
		/// Before closing body scripts: Anything you enter here will be placed before the closing &lt;/body&gt; tag on every page of your website.
		///</summary>
		[ImplementPropertyType("beforeClosingBodyScripts")]
		public string BeforeClosingBodyScripts
		{
			get { return this.GetPropertyValue<string>("beforeClosingBodyScripts"); }
		}

		///<summary>
		/// Company name
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return this.GetPropertyValue<string>("companyName"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("cookieHeading")]
		public string CookieHeading
		{
			get { return this.GetPropertyValue<string>("cookieHeading"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("cookieText")]
		public IHtmlString CookieText
		{
			get { return this.GetPropertyValue<IHtmlString>("cookieText"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available. Individual signup forms can have their own Subscriber List ID however the one entered here will be used as the default.
		///</summary>
		[ImplementPropertyType("defaultNewsletterSubscriberListID")]
		public string DefaultNewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("defaultNewsletterSubscriberListID"); }
		}

		///<summary>
		/// Default standard page layout: If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("defaultPageLayout")]
		public string DefaultPageLayout
		{
			get { return this.GetPropertyValue<string>("defaultPageLayout"); }
		}

		///<summary>
		/// Default sitewide pods: Select the default pods you would like to appear on your website.
		///</summary>
		[ImplementPropertyType("defaultSitewidePods")]
		public IEnumerable<IPublishedContent> DefaultSitewidePods
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("defaultSitewidePods"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return this.GetPropertyValue<bool>("disableDelete"); }
		}

		///<summary>
		/// Email address
		///</summary>
		[ImplementPropertyType("emailAddress")]
		public string EmailAddress
		{
			get { return this.GetPropertyValue<string>("emailAddress"); }
		}

		///<summary>
		/// Email marketing platform: If nothing is selected Newsletter Signup will not be available.
		///</summary>
		[ImplementPropertyType("emailMarketingPlatform")]
		public string EmailMarketingPlatform
		{
			get { return this.GetPropertyValue<string>("emailMarketingPlatform"); }
		}

		///<summary>
		/// Enable
		///</summary>
		[ImplementPropertyType("enable")]
		public bool Enable
		{
			get { return this.GetPropertyValue<bool>("enable"); }
		}

		///<summary>
		/// Examine search provider name: Enter the name of your Examine search provider defined in /Config/ExamineSettings.config    If nothing is entered the search form will not appear.
		///</summary>
		[ImplementPropertyType("examineSearchProviderName")]
		public string ExamineSearchProviderName
		{
			get { return this.GetPropertyValue<string>("examineSearchProviderName"); }
		}

		///<summary>
		/// Favicon and touch icons: This image will be used for your website favicon and device bookmarks. We suggest that you use an image of at least 310x310 pixels.
		///</summary>
		[ImplementPropertyType("faviconAndTouchIcons")]
		public IPublishedContent FaviconAndTouchIcons
		{
			get { return this.GetPropertyValue<IPublishedContent>("faviconAndTouchIcons"); }
		}

		///<summary>
		/// Fixed width: If set to yes, this will add a maximum width to the overall site content.
		///</summary>
		[ImplementPropertyType("fixedWidth")]
		public bool FixedWidth
		{
			get { return this.GetPropertyValue<bool>("fixedWidth"); }
		}

		///<summary>
		/// Google business link: This must be a business page, not a user page.
		///</summary>
		[ImplementPropertyType("googleBusinessLink")]
		public string GoogleBusinessLink
		{
			get { return this.GetPropertyValue<string>("googleBusinessLink"); }
		}

		///<summary>
		/// Header scripts: Anything you enter here will be placed before the closing &lt;/head&gt; tag on every page of your website.    Example usage would be for entering Google Analytics Script code.
		///</summary>
		[ImplementPropertyType("headerScripts")]
		public string HeaderScripts
		{
			get { return this.GetPropertyValue<string>("headerScripts"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Global Settings{i class="icon sprTree icon-globe-inverted-europe-africa color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This item controls global settings that relate to your website as a whole.{/p}  {p}{strong}DO NOT{/strong} delete this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// API key: If nothing is entered Newsletter Signup will not be available.
		///</summary>
		[ImplementPropertyType("newsletterAPIKey")]
		public string NewsletterApikey
		{
			get { return this.GetPropertyValue<string>("newsletterAPIKey"); }
		}

		///<summary>
		/// Default Open Graph image: This is the default Open Graph image associated with your media. We suggest that you use an image of at least 1200x630 pixels.
		///</summary>
		[ImplementPropertyType("openGraphDefaultImage")]
		public IPublishedContent OpenGraphDefaultImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("openGraphDefaultImage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroDefaultAnimate")]
		public bool OutroDefaultAnimate
		{
			get { return this.GetPropertyValue<bool>("outroDefaultAnimate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroDefaultBackgroundColor")]
		public string OutroDefaultBackgroundColor
		{
			get { return this.GetPropertyValue<string>("outroDefaultBackgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroDefaultBackgroundImage")]
		public IPublishedContent OutroDefaultBackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("outroDefaultBackgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroDefaultBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroDefaultBackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("outroDefaultBackgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroDefaultButtonColor")]
		public string OutroDefaultButtonColor
		{
			get { return this.GetPropertyValue<string>("outroDefaultButtonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroDefaultHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroDefaultHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("outroDefaultHeading"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroDefaultLink")]
		public Umbraco.Web.Models.RelatedLinks OutroDefaultLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("outroDefaultLink"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroDefaultText")]
		public IHtmlString OutroDefaultText
		{
			get { return this.GetPropertyValue<IHtmlString>("outroDefaultText"); }
		}

		///<summary>
		/// Remember acceptance duration (days)
		///</summary>
		[ImplementPropertyType("rememberAcceptanceDurationDays")]
		public int RememberAcceptanceDurationDays
		{
			get { return this.GetPropertyValue<int>("rememberAcceptanceDurationDays"); }
		}

		///<summary>
		/// Search results page: If no page is selected the search form will not appear.
		///</summary>
		[ImplementPropertyType("searchResultsPage")]
		public IPublishedContent SearchResultsPage
		{
			get { return this.GetPropertyValue<IPublishedContent>("searchResultsPage"); }
		}

		///<summary>
		/// Telephone number
		///</summary>
		[ImplementPropertyType("telephoneNumber")]
		public string TelephoneNumber
		{
			get { return this.GetPropertyValue<string>("telephoneNumber"); }
		}

		///<summary>
		/// Website logo: We suggest that you use an image of at least 240 pixels in height. This is to ensure your logo is ready for both retina and non-retina displays.
		///</summary>
		[ImplementPropertyType("websiteLogo")]
		public IPublishedContent WebsiteLogo
		{
			get { return this.GetPropertyValue<IPublishedContent>("websiteLogo"); }
		}

		///<summary>
		/// Website name: The text entered here will be be added to the default Meta title of your webpages and used for the hidden text behind your website logo.
		///</summary>
		[ImplementPropertyType("websiteName")]
		public string WebsiteName
		{
			get { return this.GetPropertyValue<string>("websiteName"); }
		}
	}

	/// <summary>Grid Layout Section</summary>
	[PublishedContentModel("USN_AC_GridLayoutSection_AN")]
	public partial class Usn_Ac_GridLayoutSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_GridLayoutSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_GridLayoutSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_GridLayoutSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Grid
		///</summary>
		[ImplementPropertyType("grid")]
		public Newtonsoft.Json.Linq.JToken Grid
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("grid"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Grid Layout Section{i class="icon sprTree icon-grid color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Image Pod</summary>
	[PublishedContentModel("USN_SWP_ImagePod")]
	public partial class Usn_Swp_ImagePod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ImagePod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ImagePod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ImagePod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable light window
		///</summary>
		[ImplementPropertyType("disableLightWindow")]
		public bool DisableLightWindow
		{
			get { return this.GetPropertyValue<bool>("disableLightWindow"); }
		}

		///<summary>
		/// Image link: {p}Link will only be used if light window is disabled.{/p}{p}The 'Caption' field will be ignored however you must enter something in order to save this link.{/p}
		///</summary>
		[ImplementPropertyType("imageLink")]
		public Umbraco.Web.Models.RelatedLinks ImageLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("imageLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Image Pod{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 400px x 300px and displayed as the thumbnail.    Focal point of the image is defined within your "Media" section.    The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public IPublishedContent LightWindowImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("lightWindowImage"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Links Section</summary>
	[PublishedContentModel("USN_SC_LinksSection_AN")]
	public partial class Usn_Sc_LinksSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_LinksSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_LinksSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_LinksSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Links: The 'Caption' field will be used for your link text.
		///</summary>
		[ImplementPropertyType("groupLinks")]
		public Umbraco.Web.Models.RelatedLinks GroupLinks
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("groupLinks"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Links Section{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Listing Pod</summary>
	[PublishedContentModel("USN_SWP_ListingPod")]
	public partial class Usn_Swp_ListingPod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_ListingPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_ListingPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_ListingPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Listing Pod{i class="icon sprTree icon-bulleted-list color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link to listing: Link this to an internal page that contains sub pages. Sub pages will be listed.    If linking to a "Blog", either link to the "Blog Landing Page" or "Blog Category Page".    Links to external pages will be ignored.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public Umbraco.Web.Models.RelatedLinks LinkToListing
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("linkToListing"); }
		}

		///<summary>
		/// Pages to display
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public int PagesToDisplay
		{
			get { return this.GetPropertyValue<int>("pagesToDisplay"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("USNNavigation")]
	public partial class Usnnavigation : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNNavigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnnavigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnnavigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Behance link
		///</summary>
		[ImplementPropertyType("behanceLink")]
		public string BehanceLink
		{
			get { return this.GetPropertyValue<string>("behanceLink"); }
		}

		///<summary>
		/// Sitewide call to action link: This link should be used for a main call to action. The link will appear in a prominent position on your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("ctaLink")]
		public Umbraco.Web.Models.RelatedLinks CtaLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("ctaLink"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return this.GetPropertyValue<bool>("disableDelete"); }
		}

		///<summary>
		/// Display sub pages: Tick this box to include sub pages in the "Main Navigation".
		///</summary>
		[ImplementPropertyType("displaySubPages")]
		public bool DisplaySubPages
		{
			get { return this.GetPropertyValue<bool>("displaySubPages"); }
		}

		///<summary>
		/// Facebook link
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Flickr link
		///</summary>
		[ImplementPropertyType("flickrLink")]
		public string FlickrLink
		{
			get { return this.GetPropertyValue<string>("flickrLink"); }
		}

		///<summary>
		/// Footer navigation: Select the links you would like to appear on the "Footer Navigation" of your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerNavigation")]
		public Umbraco.Web.Models.RelatedLinks FooterNavigation
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("footerNavigation"); }
		}

		///<summary>
		/// Quick links: Select the links you would like to appear on the "Quick links" section of your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("footerQuickLinks")]
		public Umbraco.Web.Models.RelatedLinks FooterQuickLinks
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("footerQuickLinks"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("footerQuickLinksHeading")]
		public string FooterQuickLinksHeading
		{
			get { return this.GetPropertyValue<string>("footerQuickLinksHeading"); }
		}

		///<summary>
		/// Google+ link
		///</summary>
		[ImplementPropertyType("googleLink")]
		public string GoogleLink
		{
			get { return this.GetPropertyValue<string>("googleLink"); }
		}

		///<summary>
		/// Instagram link
		///</summary>
		[ImplementPropertyType("instagramLink")]
		public string InstagramLink
		{
			get { return this.GetPropertyValue<string>("instagramLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Navigation{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This item controls the navigation elements available on your website.{/p}  {p}{strong}DO NOT{/strong} delete this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// LinkedIn link
		///</summary>
		[ImplementPropertyType("linkedInLink")]
		public string LinkedInLink
		{
			get { return this.GetPropertyValue<string>("linkedInLink"); }
		}

		///<summary>
		/// Logged in members navigation: Select the pages you would like to appear on the "Logged in Members Navigation" of your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("loggedInMembersNavigation")]
		public Umbraco.Web.Models.RelatedLinks LoggedInMembersNavigation
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("loggedInMembersNavigation"); }
		}

		///<summary>
		/// Login page: If nothing is selected the "Members Navigation" will be hidden.
		///</summary>
		[ImplementPropertyType("loginPage")]
		public IPublishedContent LoginPage
		{
			get { return this.GetPropertyValue<IPublishedContent>("loginPage"); }
		}

		///<summary>
		/// Main navigation: Select the links you would like to appear on the "Main Navigation" of your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("mainNavigation")]
		public Umbraco.Web.Models.RelatedLinks MainNavigation
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("mainNavigation"); }
		}

		///<summary>
		/// Navigation heading: This will override the default heading defined in the Dictionary Section of Umbraco.
		///</summary>
		[ImplementPropertyType("membersNavigationHeading")]
		public string MembersNavigationHeading
		{
			get { return this.GetPropertyValue<string>("membersNavigationHeading"); }
		}

		///<summary>
		/// Pinterest link
		///</summary>
		[ImplementPropertyType("pinterestLink")]
		public string PinterestLink
		{
			get { return this.GetPropertyValue<string>("pinterestLink"); }
		}

		///<summary>
		/// RSS Feed
		///</summary>
		[ImplementPropertyType("rssFeedLink")]
		public IPublishedContent RssFeedLink
		{
			get { return this.GetPropertyValue<IPublishedContent>("rssFeedLink"); }
		}

		///<summary>
		/// Secondary navigation: Select the links you would like to appear on the "Secondary Navigation" of your website.    The "Caption" field is used for your link text.
		///</summary>
		[ImplementPropertyType("secondaryNavigation")]
		public Umbraco.Web.Models.RelatedLinks SecondaryNavigation
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("secondaryNavigation"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("socialHeading")]
		public string SocialHeading
		{
			get { return this.GetPropertyValue<string>("socialHeading"); }
		}

		///<summary>
		/// SoundCloud link
		///</summary>
		[ImplementPropertyType("soundCloudLink")]
		public string SoundCloudLink
		{
			get { return this.GetPropertyValue<string>("soundCloudLink"); }
		}

		///<summary>
		/// Tumblr link
		///</summary>
		[ImplementPropertyType("tumblrLink")]
		public string TumblrLink
		{
			get { return this.GetPropertyValue<string>("tumblrLink"); }
		}

		///<summary>
		/// Twitter link
		///</summary>
		[ImplementPropertyType("twitterLink")]
		public string TwitterLink
		{
			get { return this.GetPropertyValue<string>("twitterLink"); }
		}

		///<summary>
		/// Vimeo link
		///</summary>
		[ImplementPropertyType("vimeoLink")]
		public string VimeoLink
		{
			get { return this.GetPropertyValue<string>("vimeoLink"); }
		}

		///<summary>
		/// YouTube link
		///</summary>
		[ImplementPropertyType("youTubeLink")]
		public string YouTubeLink
		{
			get { return this.GetPropertyValue<string>("youTubeLink"); }
		}
	}

	/// <summary>Newsletter Signup Form</summary>
	[PublishedContentModel("USN_NewsletterSignup_AN")]
	public partial class Usn_NewsletterSignup_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_NewsletterSignup_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_NewsletterSignup_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_NewsletterSignup_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Newsletter Signup Form{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Newsletter Signup Pod</summary>
	[PublishedContentModel("USN_SWP_NewsletterSignupPod")]
	public partial class Usn_Swp_NewsletterSignupPod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_NewsletterSignupPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_NewsletterSignupPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_NewsletterSignupPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Newsletter Signup Pod{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public string NewsletterHeading
		{
			get { return this.GetPropertyValue<string>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available. Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	// Mixin content Type 1131 with alias "USN_CMP_OutroStrip"
	/// <summary>Outro Strip</summary>
	public partial interface IUsn_Cmp_OutroStrip : IPublishedContent
	{
		/// <summary>Hide outro strip section</summary>
		bool HideOutroStripSection { get; }

		/// <summary>Animate</summary>
		bool OutroAnimate { get; }

		/// <summary>Background color</summary>
		string OutroBackgroundColor { get; }

		/// <summary>Background image</summary>
		IPublishedContent OutroBackgroundImage { get; }

		/// <summary>Background image options</summary>
		USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions { get; }

		/// <summary>Button color</summary>
		string OutroButtonColor { get; }

		/// <summary>Heading</summary>
		USNStarterKit.USNHeading.Models.USNHeading OutroHeading { get; }

		/// <summary>Link</summary>
		Umbraco.Web.Models.RelatedLinks OutroLink { get; }

		/// <summary>Text</summary>
		IHtmlString OutroText { get; }

		/// <summary>Override default outro strip section</summary>
		bool OverrideDefaultOutroStripSection { get; }
	}

	/// <summary>Outro Strip</summary>
	[PublishedContentModel("USN_CMP_OutroStrip")]
	public partial class Usn_Cmp_OutroStrip : PublishedContentModel, IUsn_Cmp_OutroStrip
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_OutroStrip";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_OutroStrip(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_OutroStrip, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return GetHideOutroStripSection(this); }
		}

		/// <summary>Static getter for Hide outro strip section</summary>
		public static bool GetHideOutroStripSection(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<bool>("hideOutroStripSection"); }

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return GetOutroAnimate(this); }
		}

		/// <summary>Static getter for Animate</summary>
		public static bool GetOutroAnimate(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<bool>("outroAnimate"); }

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return GetOutroBackgroundColor(this); }
		}

		/// <summary>Static getter for Background color</summary>
		public static string GetOutroBackgroundColor(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<string>("outroBackgroundColor"); }

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return GetOutroBackgroundImage(this); }
		}

		/// <summary>Static getter for Background image</summary>
		public static IPublishedContent GetOutroBackgroundImage(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<IPublishedContent>("outroBackgroundImage"); }

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return GetOutroBackgroundImageOptions(this); }
		}

		/// <summary>Static getter for Background image options</summary>
		public static USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption GetOutroBackgroundImageOptions(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("outroBackgroundImageOptions"); }

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return GetOutroButtonColor(this); }
		}

		/// <summary>Static getter for Button color</summary>
		public static string GetOutroButtonColor(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<string>("outroButtonColor"); }

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return GetOutroHeading(this); }
		}

		/// <summary>Static getter for Heading</summary>
		public static USNStarterKit.USNHeading.Models.USNHeading GetOutroHeading(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("outroHeading"); }

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return GetOutroLink(this); }
		}

		/// <summary>Static getter for Link</summary>
		public static Umbraco.Web.Models.RelatedLinks GetOutroLink(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("outroLink"); }

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return GetOutroText(this); }
		}

		/// <summary>Static getter for Text</summary>
		public static IHtmlString GetOutroText(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<IHtmlString>("outroText"); }

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return GetOverrideDefaultOutroStripSection(this); }
		}

		/// <summary>Static getter for Override default outro strip section</summary>
		public static bool GetOverrideDefaultOutroStripSection(IUsn_Cmp_OutroStrip that) { return that.GetPropertyValue<bool>("overrideDefaultOutroStripSection"); }
	}

	// Mixin content Type 1132 with alias "USN_CMP_PageGenericProperties"
	/// <summary>Page Generic Properties</summary>
	public partial interface IUsn_Cmp_PageGenericProperties : IPublishedContent
	{
		/// <summary>Custom body classes</summary>
		string CustomBodyClasses { get; }

		/// <summary>Hide website footer section</summary>
		bool HideWebsiteFooterSection { get; }

		/// <summary>Hide website header section</summary>
		bool HideWebsiteHeaderSection { get; }

		/// <summary>Hide from all navigation</summary>
		bool UmbracoNaviHide { get; }

		/// <summary>Alternative URL</summary>
		string UmbracoUrlAlias { get; }
	}

	/// <summary>Page Generic Properties</summary>
	[PublishedContentModel("USN_CMP_PageGenericProperties")]
	public partial class Usn_Cmp_PageGenericProperties : PublishedContentModel, IUsn_Cmp_PageGenericProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_PageGenericProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_PageGenericProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_PageGenericProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return GetCustomBodyClasses(this); }
		}

		/// <summary>Static getter for Custom body classes</summary>
		public static string GetCustomBodyClasses(IUsn_Cmp_PageGenericProperties that) { return that.GetPropertyValue<string>("customBodyClasses"); }

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return GetHideWebsiteFooterSection(this); }
		}

		/// <summary>Static getter for Hide website footer section</summary>
		public static bool GetHideWebsiteFooterSection(IUsn_Cmp_PageGenericProperties that) { return that.GetPropertyValue<bool>("hideWebsiteFooterSection"); }

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return GetHideWebsiteHeaderSection(this); }
		}

		/// <summary>Static getter for Hide website header section</summary>
		public static bool GetHideWebsiteHeaderSection(IUsn_Cmp_PageGenericProperties that) { return that.GetPropertyValue<bool>("hideWebsiteHeaderSection"); }

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Hide from all navigation</summary>
		public static bool GetUmbracoNaviHide(IUsn_Cmp_PageGenericProperties that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return GetUmbracoUrlAlias(this); }
		}

		/// <summary>Static getter for Alternative URL</summary>
		public static string GetUmbracoUrlAlias(IUsn_Cmp_PageGenericProperties that) { return that.GetPropertyValue<string>("umbracoUrlAlias"); }
	}

	// Mixin content Type 1133 with alias "USN_CMP_PageNavSettings"
	/// <summary>Page Navigation Settings</summary>
	public partial interface IUsn_Cmp_PageNavSettings : IPublishedContent
	{
		/// <summary>Breadcrumb link text</summary>
		string BreadcrumbLinkText { get; }

		/// <summary>Hide breadcrumb</summary>
		bool HideBreadcrumb { get; }
	}

	/// <summary>Page Navigation Settings</summary>
	[PublishedContentModel("USN_CMP_PageNavSettings")]
	public partial class Usn_Cmp_PageNavSettings : PublishedContentModel, IUsn_Cmp_PageNavSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_PageNavSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_PageNavSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_PageNavSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return GetBreadcrumbLinkText(this); }
		}

		/// <summary>Static getter for Breadcrumb link text</summary>
		public static string GetBreadcrumbLinkText(IUsn_Cmp_PageNavSettings that) { return that.GetPropertyValue<string>("breadcrumbLinkText"); }

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return GetHideBreadcrumb(this); }
		}

		/// <summary>Static getter for Hide breadcrumb</summary>
		public static bool GetHideBreadcrumb(IUsn_Cmp_PageNavSettings that) { return that.GetPropertyValue<bool>("hideBreadcrumb"); }
	}

	// Mixin content Type 1134 with alias "USN_CMP_Pods"
	/// <summary>Page Pods</summary>
	public partial interface IUsn_Cmp_Pods : IPublishedContent
	{
		/// <summary>Override default pods</summary>
		bool OverrideDefaultPods { get; }

		/// <summary>Pods</summary>
		IEnumerable<IPublishedContent> PagePods { get; }
	}

	/// <summary>Page Pods</summary>
	[PublishedContentModel("USN_CMP_Pods")]
	public partial class Usn_Cmp_Pods : PublishedContentModel, IUsn_Cmp_Pods
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_Pods";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_Pods(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_Pods, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return GetOverrideDefaultPods(this); }
		}

		/// <summary>Static getter for Override default pods</summary>
		public static bool GetOverrideDefaultPods(IUsn_Cmp_Pods that) { return that.GetPropertyValue<bool>("overrideDefaultPods"); }

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return GetPagePods(this); }
		}

		/// <summary>Static getter for Pods</summary>
		public static IEnumerable<IPublishedContent> GetPagePods(IUsn_Cmp_Pods that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("pagePods"); }
	}

	/// <summary>Pod</summary>
	[PublishedContentModel("USN_AC_Pod")]
	public partial class Usn_Ac_Pod : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_Pod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_Pod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_Pod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Pod{i class="icon sprTree icon-disc color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Image: Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("podImage")]
		public IPublishedContent PodImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("podImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("podImageAltText")]
		public string PodImageAltText
		{
			get { return this.GetPropertyValue<string>("podImageAltText"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("podLink")]
		public Umbraco.Web.Models.RelatedLinks PodLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("podLink"); }
		}

		///<summary>
		/// Text: This will only be displayed if the 'Pod style' is set to 'Text below image'.
		///</summary>
		[ImplementPropertyType("podText")]
		public IHtmlString PodText
		{
			get { return this.GetPropertyValue<IHtmlString>("podText"); }
		}

		///<summary>
		/// Heading
		///</summary>
		[ImplementPropertyType("podTitle")]
		public string PodTitle
		{
			get { return this.GetPropertyValue<string>("podTitle"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Pods Section</summary>
	[PublishedContentModel("USN_AC_PodsSection_AN")]
	public partial class Usn_Ac_PodsSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_PodsSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_PodsSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_PodsSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Pod Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Pod" below this folder.{/p}{p}The order of your "items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Pod style
		///</summary>
		[ImplementPropertyType("podStyle")]
		public string PodStyle
		{
			get { return this.GetPropertyValue<string>("podStyle"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionHeading(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionText(this); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroLinks(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroText(this); }
		}
	}

	/// <summary>Price List Item</summary>
	[PublishedContentModel("USN_SC_PriceListItem")]
	public partial class Usn_Sc_PriceListItem : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_PriceListItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_PriceListItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_PriceListItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Price List Item{i class="icon sprTree icon-bill color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be used as the name of the "Price List Item".{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Item description
		///</summary>
		[ImplementPropertyType("itemDescription")]
		public IHtmlString ItemDescription
		{
			get { return this.GetPropertyValue<IHtmlString>("itemDescription"); }
		}

		///<summary>
		/// Item price
		///</summary>
		[ImplementPropertyType("itemPrice")]
		public IHtmlString ItemPrice
		{
			get { return this.GetPropertyValue<IHtmlString>("itemPrice"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Price List Section</summary>
	[PublishedContentModel("USN_SC_PriceListSection_AN")]
	public partial class Usn_Sc_PriceListSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_PriceListSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_PriceListSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_PriceListSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Price List Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Price List Item" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Table heading
		///</summary>
		[ImplementPropertyType("tableHeading")]
		public string TableHeading
		{
			get { return this.GetPropertyValue<string>("tableHeading"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Resource Item</summary>
	[PublishedContentModel("USN_SC_ResourceItem")]
	public partial class Usn_Sc_ResourceItem : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourceItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourceItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourceItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Resource Item{i class="icon sprTree icon-link color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link
		///</summary>
		[ImplementPropertyType("link")]
		public Umbraco.Web.Models.RelatedLinks Link
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("link"); }
		}

		///<summary>
		/// Optional additional information
		///</summary>
		[ImplementPropertyType("optionalAdditionalInformation")]
		public IHtmlString OptionalAdditionalInformation
		{
			get { return this.GetPropertyValue<IHtmlString>("optionalAdditionalInformation"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Resources Section</summary>
	[PublishedContentModel("USN_SC_ResourcesSection_AN")]
	public partial class Usn_Sc_ResourcesSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_ResourcesSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_ResourcesSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_ResourcesSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Resources Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Resource Item" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	// Mixin content Type 1141 with alias "USN_CMP_SEO"
	/// <summary>SEO</summary>
	public partial interface IUsn_Cmp_Seo : IPublishedContent
	{
		/// <summary>Meta description</summary>
		string MetaDescription { get; }

		/// <summary>Open Graph description</summary>
		string OpenGraphDescription { get; }

		/// <summary>Open Graph image</summary>
		IPublishedContent OpenGraphImage { get; }

		/// <summary>Open Graph title</summary>
		string OpenGraphTitle { get; }

		/// <summary>Web page header title</summary>
		string PageTitle { get; }
	}

	/// <summary>SEO</summary>
	[PublishedContentModel("USN_CMP_SEO")]
	public partial class Usn_Cmp_Seo : PublishedContentModel, IUsn_Cmp_Seo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_SEO";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_Seo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_Seo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta description</summary>
		public static string GetMetaDescription(IUsn_Cmp_Seo that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return GetOpenGraphDescription(this); }
		}

		/// <summary>Static getter for Open Graph description</summary>
		public static string GetOpenGraphDescription(IUsn_Cmp_Seo that) { return that.GetPropertyValue<string>("openGraphDescription"); }

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return GetOpenGraphImage(this); }
		}

		/// <summary>Static getter for Open Graph image</summary>
		public static IPublishedContent GetOpenGraphImage(IUsn_Cmp_Seo that) { return that.GetPropertyValue<IPublishedContent>("openGraphImage"); }

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return GetOpenGraphTitle(this); }
		}

		/// <summary>Static getter for Open Graph title</summary>
		public static string GetOpenGraphTitle(IUsn_Cmp_Seo that) { return that.GetPropertyValue<string>("openGraphTitle"); }

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Web page header title</summary>
		public static string GetPageTitle(IUsn_Cmp_Seo that) { return that.GetPropertyValue<string>("pageTitle"); }
	}

	/// <summary>Advanced Page</summary>
	[PublishedContentModel("USNAdvancedPage")]
	public partial class UsnadvancedPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Advanced Page{i class="icon umb-tree-icon sprTree icon-layout pull-right"}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".    Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public IPublishedContent PageListingImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Subpage Listing".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}
	}

	/// <summary>Advanced Page Blog Post</summary>
	[PublishedContentModel("USNAdvancedPageBlogPost")]
	public partial class UsnadvancedPageBlogPost : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNAdvancedPageBlogPost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnadvancedPageBlogPost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnadvancedPageBlogPost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable comments: Tick this box to disable commenting for this post. This is only relevant if you have entered a "Disqus username" on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("disableComments")]
		public bool DisableComments
		{
			get { return this.GetPropertyValue<bool>("disableComments"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Advanced Page Blog Post{i class="icon umb-tree-icon sprTree icon-layout pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Listing image: Image will be cropped to 1140px x 854px if displayed in a vertical list.    Image will be cropped to 400px x 300px if displayed in a grid list.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public IPublishedContent PageListingImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Post summary
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("postAuthor")]
		public IEnumerable<IPublishedContent> PostAuthor
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("postAuthor"); }
		}

		///<summary>
		/// Categories: If selecting a child category make sure you also select the parent categories.
		///</summary>
		[ImplementPropertyType("postCategories")]
		public IEnumerable<IPublishedContent> PostCategories
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("postCategories"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}
	}

	/// <summary>Homepage</summary>
	[PublishedContentModel("USNHomepage")]
	public partial class Usnhomepage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNHomepage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usnhomepage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usnhomepage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Homepage{i class="icon umb-tree-icon sprTree icon-home pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}To add content to this page you are required to add components to the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to organise the layout and content of this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Website configuration node: Select the 'Website Configuration' node that will control the global properties of this website.
		///</summary>
		[ImplementPropertyType("websiteConfigurationNode")]
		public IPublishedContent WebsiteConfigurationNode
		{
			get { return this.GetPropertyValue<IPublishedContent>("websiteConfigurationNode"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}
	}

	/// <summary>Signup/Subpage Listing Section</summary>
	[PublishedContentModel("USN_AC_SignupSubpageListingSection_AN")]
	public partial class Usn_Ac_SignupSubpageListingSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_SignupSubpageListingSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_SignupSubpageListingSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_SignupSubpageListingSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Signup/Subpage Listing Section{i class="icon sprTree icon-circle-dotted-active color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link to listing: Link this to an internal page that contains sub pages. Sub pages will be listed.    If linking to a "Blog", either link to the "Blog Landing Page" or "Blog Category Page".    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("linkToListing")]
		public Umbraco.Web.Models.RelatedLinks LinkToListing
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("linkToListing"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("listingSectionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading ListingSectionHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("listingSectionHeading"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("newsletterButtonText")]
		public string NewsletterButtonText
		{
			get { return this.GetPropertyValue<string>("newsletterButtonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Newsletter section position: Display newsletter section before or after the listing section.
		///</summary>
		[ImplementPropertyType("newsletterSectionPosition")]
		public string NewsletterSectionPosition
		{
			get { return this.GetPropertyValue<string>("newsletterSectionPosition"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available.    Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public int PagesToDisplay
		{
			get { return this.GetPropertyValue<int>("pagesToDisplay"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page.    If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("summaryTextCharacterCount")]
		public int SummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<int>("summaryTextCharacterCount"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Sitewide Pods Folder</summary>
	[PublishedContentModel("USNSitewidePods")]
	public partial class UsnsitewidePods : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitewidePods";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitewidePods(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitewidePods, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Sitewide Pods{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add items below this folder to create "Sitewide pods" that will be available for display on "Standard Pages" and "Standard Page Blog Posts".{/p}{p}The "Pods" tab within "Global Settings" is used to control the default pods that will be added to "Standard Pages" and "Standard Page Blog Posts".{/p}{p}The "Pods" tab on each "Standard Page" and "Standard Page Blog Post" can be used to override the default pods that have been selected.{/p}{p}{strong}DO NOT{/strong} delete this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Slideshow Image</summary>
	[PublishedContentModel("USN_SC_SlideshowImage")]
	public partial class Usn_Sc_SlideshowImage : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Slideshow Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("slideshowImage")]
		public IPublishedContent SlideshowImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("slideshowImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("slideshowImageAltText")]
		public string SlideshowImageAltText
		{
			get { return this.GetPropertyValue<string>("slideshowImageAltText"); }
		}

		///<summary>
		/// Image caption
		///</summary>
		[ImplementPropertyType("slideshowImageCaption")]
		public string SlideshowImageCaption
		{
			get { return this.GetPropertyValue<string>("slideshowImageCaption"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Slideshow Section</summary>
	[PublishedContentModel("USN_SC_SlideshowSection_AN")]
	public partial class Usn_Sc_SlideshowSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Auto rotate speed: Enter a number here in milliseconds to enable auto rotation (e.g. 1000 = 1 seconds).
		///</summary>
		[ImplementPropertyType("autoRotateSpeed")]
		public int AutoRotateSpeed
		{
			get { return this.GetPropertyValue<int>("autoRotateSpeed"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Slideshow Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Slideshow Image" or "Slideshow  Video" below this folder.{/p}{p}The order of your items within this folder directly relates to the order your items will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Slideshow Video</summary>
	[PublishedContentModel("USN_SC_SlideshowVideo")]
	public partial class Usn_Sc_SlideshowVideo : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_SlideshowVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_SlideshowVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_SlideshowVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Slideshow Video{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Video caption
		///</summary>
		[ImplementPropertyType("slideshowVideoCaption")]
		public string SlideshowVideoCaption
		{
			get { return this.GetPropertyValue<string>("slideshowVideoCaption"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("video")]
		public string Video
		{
			get { return this.GetPropertyValue<string>("video"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Standard Page Components Folder</summary>
	[PublishedContentModel("USNStandardPageComponents")]
	public partial class UsnstandardPageComponents : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageComponents";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageComponents(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageComponents, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Page Components{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Add components below this folder to organise the layout and content of your page.{/p}{p}The order of your components within this folder directly relates to the order your components will be displayed on this page. Use {strong}Actions } Sort{/strong} to reorder your components.{p}{strong}DO NOT{/strong} delete or rename this folder.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	// Mixin content Type 1151 with alias "USN_CMP_SP_Content"
	/// <summary>Standard Page Content</summary>
	public partial interface IUsn_Cmp_Sp_Content : IPublishedContent
	{
		/// <summary>Main content</summary>
		IHtmlString BodyText { get; }

		/// <summary>Main image</summary>
		IPublishedContent MainImage { get; }

		/// <summary>Main image alt text</summary>
		string MainImageAltText { get; }

		/// <summary>Main image caption</summary>
		string MainImageCaption { get; }

		/// <summary>Page title</summary>
		string OnPageTitle { get; }
	}

	/// <summary>Standard Page Content</summary>
	[PublishedContentModel("USN_CMP_SP_Content")]
	public partial class Usn_Cmp_Sp_Content : PublishedContentModel, IUsn_Cmp_Sp_Content
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_SP_Content";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_Sp_Content(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_Sp_Content, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return GetBodyText(this); }
		}

		/// <summary>Static getter for Main content</summary>
		public static IHtmlString GetBodyText(IUsn_Cmp_Sp_Content that) { return that.GetPropertyValue<IHtmlString>("bodyText"); }

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return GetMainImage(this); }
		}

		/// <summary>Static getter for Main image</summary>
		public static IPublishedContent GetMainImage(IUsn_Cmp_Sp_Content that) { return that.GetPropertyValue<IPublishedContent>("mainImage"); }

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return GetMainImageAltText(this); }
		}

		/// <summary>Static getter for Main image alt text</summary>
		public static string GetMainImageAltText(IUsn_Cmp_Sp_Content that) { return that.GetPropertyValue<string>("mainImageAltText"); }

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return GetMainImageCaption(this); }
		}

		/// <summary>Static getter for Main image caption</summary>
		public static string GetMainImageCaption(IUsn_Cmp_Sp_Content that) { return that.GetPropertyValue<string>("mainImageCaption"); }

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return GetOnPageTitle(this); }
		}

		/// <summary>Static getter for Page title</summary>
		public static string GetOnPageTitle(IUsn_Cmp_Sp_Content that) { return that.GetPropertyValue<string>("onPageTitle"); }
	}

	// Mixin content Type 1152 with alias "USN_CMP_SP_HeaderSection"
	/// <summary>Standard Page Header Section</summary>
	public partial interface IUsn_Cmp_Sp_HeaderSection : IPublishedContent
	{
		/// <summary>Add color overlay</summary>
		bool AddColorOverlay { get; }

		/// <summary>Display header image section</summary>
		bool DisplayHeaderImageSection { get; }

		/// <summary>Animate</summary>
		bool HeaderAnimate { get; }

		/// <summary>Background color</summary>
		string HeaderBackgroundColor { get; }

		/// <summary>Button color</summary>
		string HeaderButtonColor { get; }

		/// <summary>Heading</summary>
		USNStarterKit.USNHeading.Models.USNHeading HeaderHeading { get; }

		/// <summary>Image</summary>
		IPublishedContent HeaderImage { get; }

		/// <summary>Image alt text</summary>
		string HeaderImageAltText { get; }

		/// <summary>Link</summary>
		Umbraco.Web.Models.RelatedLinks HeaderLink { get; }

		/// <summary>Parallax</summary>
		bool HeaderParallax { get; }

		/// <summary>Scroll prompt</summary>
		bool HeaderScrollPrompt { get; }

		/// <summary>Header style</summary>
		string HeaderStyle { get; }

		/// <summary>Text</summary>
		IHtmlString HeaderText { get; }

		/// <summary>Text alignment</summary>
		string HeaderTextAlignment { get; }

		/// <summary>Video</summary>
		IPublishedContent Video { get; }
	}

	/// <summary>Standard Page Header Section</summary>
	[PublishedContentModel("USN_CMP_SP_HeaderSection")]
	public partial class Usn_Cmp_Sp_HeaderSection : PublishedContentModel, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_CMP_SP_HeaderSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Cmp_Sp_HeaderSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Cmp_Sp_HeaderSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return GetAddColorOverlay(this); }
		}

		/// <summary>Static getter for Add color overlay</summary>
		public static bool GetAddColorOverlay(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<bool>("addColorOverlay"); }

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return GetDisplayHeaderImageSection(this); }
		}

		/// <summary>Static getter for Display header image section</summary>
		public static bool GetDisplayHeaderImageSection(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<bool>("displayHeaderImageSection"); }

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return GetHeaderAnimate(this); }
		}

		/// <summary>Static getter for Animate</summary>
		public static bool GetHeaderAnimate(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<bool>("headerAnimate"); }

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return GetHeaderBackgroundColor(this); }
		}

		/// <summary>Static getter for Background color</summary>
		public static string GetHeaderBackgroundColor(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<string>("headerBackgroundColor"); }

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return GetHeaderButtonColor(this); }
		}

		/// <summary>Static getter for Button color</summary>
		public static string GetHeaderButtonColor(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<string>("headerButtonColor"); }

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return GetHeaderHeading(this); }
		}

		/// <summary>Static getter for Heading</summary>
		public static USNStarterKit.USNHeading.Models.USNHeading GetHeaderHeading(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("headerHeading"); }

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return GetHeaderImage(this); }
		}

		/// <summary>Static getter for Image</summary>
		public static IPublishedContent GetHeaderImage(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<IPublishedContent>("headerImage"); }

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return GetHeaderImageAltText(this); }
		}

		/// <summary>Static getter for Image alt text</summary>
		public static string GetHeaderImageAltText(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<string>("headerImageAltText"); }

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return GetHeaderLink(this); }
		}

		/// <summary>Static getter for Link</summary>
		public static Umbraco.Web.Models.RelatedLinks GetHeaderLink(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("headerLink"); }

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return GetHeaderParallax(this); }
		}

		/// <summary>Static getter for Parallax</summary>
		public static bool GetHeaderParallax(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<bool>("headerParallax"); }

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return GetHeaderScrollPrompt(this); }
		}

		/// <summary>Static getter for Scroll prompt</summary>
		public static bool GetHeaderScrollPrompt(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<bool>("headerScrollPrompt"); }

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return GetHeaderStyle(this); }
		}

		/// <summary>Static getter for Header style</summary>
		public static string GetHeaderStyle(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<string>("headerStyle"); }

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return GetHeaderText(this); }
		}

		/// <summary>Static getter for Text</summary>
		public static IHtmlString GetHeaderText(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<IHtmlString>("headerText"); }

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return GetHeaderTextAlignment(this); }
		}

		/// <summary>Static getter for Text alignment</summary>
		public static string GetHeaderTextAlignment(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<string>("headerTextAlignment"); }

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return GetVideo(this); }
		}

		/// <summary>Static getter for Video</summary>
		public static IPublishedContent GetVideo(IUsn_Cmp_Sp_HeaderSection that) { return that.GetPropertyValue<IPublishedContent>("video"); }
	}

	/// <summary>Blog Category Page</summary>
	[PublishedContentModel("USNBlogCategoryPage")]
	public partial class UsnblogCategoryPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogCategoryPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogCategoryPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogCategoryPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Category{i class="icon sprTree icon-categories  pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above will be used for the "Category Name" displayed on the website.{/p}{p} This page will list all blog posts that have been added to this category.{/p}{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.    If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Blog Landing Page</summary>
	[PublishedContentModel("USNBlogLandingPage")]
	public partial class UsnblogLandingPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNBlogLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnblogLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnblogLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog listing layout: Layout will default to 'Vertical' if nothing is selected.
		///</summary>
		[ImplementPropertyType("blogListingLayout")]
		public string BlogListingLayout
		{
			get { return this.GetPropertyValue<string>("blogListingLayout"); }
		}

		///<summary>
		/// Blog listing page size: Enter the number of articles you would like to appear per page.
		///</summary>
		[ImplementPropertyType("blogListingPageSize")]
		public int BlogListingPageSize
		{
			get { return this.GetPropertyValue<int>("blogListingPageSize"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters of text you would like displayed from the beginning of each blog article. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("blogSummaryTextCharacterCount")]
		public int BlogSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<int>("blogSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Default author: Select the default author that will be applied to all blog posts.
		///</summary>
		[ImplementPropertyType("defaultAuthor")]
		public IEnumerable<IPublishedContent> DefaultAuthor
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("defaultAuthor"); }
		}

		///<summary>
		/// Disqus username: If nothing is entered, blog commenting will be disabled.
		///</summary>
		[ImplementPropertyType("disqusUsername")]
		public string DisqusUsername
		{
			get { return this.GetPropertyValue<string>("disqusUsername"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Blog Landing Page{i class="icon umb-tree-icon sprTree icon-newspaper pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page will list your "Blog Posts". "Blog Posts" are added to this section via the "Posts" folder directly below this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.    If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Login Page</summary>
	[PublishedContentModel("USNLoginPage")]
	public partial class UsnloginPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNLoginPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnloginPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnloginPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Login Page{i class="icon umb-tree-icon sprTree icon-arrow-right pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays a login form for gaining access to password protected areas of your website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Login form button text
		///</summary>
		[ImplementPropertyType("loginFormButtonText")]
		public string LoginFormButtonText
		{
			get { return this.GetPropertyValue<string>("loginFormButtonText"); }
		}

		///<summary>
		/// Login success page: Select the page to go to when login is successful.
		///</summary>
		[ImplementPropertyType("loginSuccessPage")]
		public IPublishedContent LoginSuccessPage
		{
			get { return this.GetPropertyValue<IPublishedContent>("loginSuccessPage"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.     If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Search Results Page</summary>
	[PublishedContentModel("USNSearchResultsPage")]
	public partial class UsnsearchResultsPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSearchResultsPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsearchResultsPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsearchResultsPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Search Results Page{i class="icon umb-tree-icon sprTree icon-search pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays a listing of your search results.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.     If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Search results page size: Enter the number of search results you would like to appear per page.
		///</summary>
		[ImplementPropertyType("searchResultsPageSize")]
		public int SearchResultsPageSize
		{
			get { return this.GetPropertyValue<int>("searchResultsPageSize"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Sitemap Page</summary>
	[PublishedContentModel("USNSitemapPage")]
	public partial class UsnsitemapPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNSitemapPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnsitemapPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnsitemapPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Sitemap Page{i class="icon umb-tree-icon sprTree icon-sitemap pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}This page displays your website sitemap.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.     If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Standard Page</summary>
	[PublishedContentModel("USNStandardPage")]
	public partial class UsnstandardPage : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Display subpage listing: Select "Yes" to display a listing of any subpages that sit below this page.
		///</summary>
		[ImplementPropertyType("displaySubpageListing")]
		public bool DisplaySubpageListing
		{
			get { return this.GetPropertyValue<bool>("displaySubpageListing"); }
		}

		///<summary>
		/// Hide sub navigation: Select "Yes" to hide the sub navigation menu from this page.
		///</summary>
		[ImplementPropertyType("hideSubNavigation")]
		public bool HideSubNavigation
		{
			get { return this.GetPropertyValue<bool>("hideSubNavigation"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Standard Page{i class="icon umb-tree-icon sprTree icon-article pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The majority of your content will be added to this page via the "Content" tab.{p}Additional layout options are available which can be added via  the "Page Components" folder directly below this page.{/p}{p}By adding new components you will be able to add more advanced layout options to this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.    If "Content full width" is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Listing image: Listing image is only displayed if this page appears on a "Sub Page Listing".    Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public IPublishedContent PageListingImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Page summary: Summary text is only displayed if this page appears on a "Subpage Listing".    If nothing is entered here the summary will be extracted from the beginning of the "Main content" of this page and the character count will be based on the settings defined on this pages parent page.
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page.    If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[ImplementPropertyType("pageSummaryTextCharacterCount")]
		public int PageSummaryTextCharacterCount
		{
			get { return this.GetPropertyValue<int>("pageSummaryTextCharacterCount"); }
		}

		///<summary>
		/// Sitemap link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("sitemapLinkText")]
		public string SitemapLinkText
		{
			get { return this.GetPropertyValue<string>("sitemapLinkText"); }
		}

		///<summary>
		/// Sub navigation link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subNavigationLinkText")]
		public string SubNavigationLinkText
		{
			get { return this.GetPropertyValue<string>("subNavigationLinkText"); }
		}

		///<summary>
		/// Subpage listing layout: Layout will default to 'Vertical' if nothing is selected.
		///</summary>
		[ImplementPropertyType("subpageListingLayout")]
		public string SubpageListingLayout
		{
			get { return this.GetPropertyValue<string>("subpageListingLayout"); }
		}

		///<summary>
		/// Subpage listing link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("subpageListingLinkText")]
		public string SubpageListingLinkText
		{
			get { return this.GetPropertyValue<string>("subpageListingLinkText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Standard Page Blog Post</summary>
	[PublishedContentModel("USNStandardPageBlogPost")]
	public partial class UsnstandardPageBlogPost : PublishedContentModel, IUsn_Cmp_DisableDelete, IUsn_Cmp_OutroStrip, IUsn_Cmp_PageGenericProperties, IUsn_Cmp_PageNavSettings, IUsn_Cmp_Pods, IUsn_Cmp_Seo, IUsn_Cmp_Sp_Content, IUsn_Cmp_Sp_HeaderSection
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNStandardPageBlogPost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnstandardPageBlogPost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnstandardPageBlogPost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable comments: Tick this box to disable commenting for this post. This is only relevant if you have entered a "Disqus username" on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("disableComments")]
		public bool DisableComments
		{
			get { return this.GetPropertyValue<bool>("disableComments"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Standard Page Blog Post{i class="icon umb-tree-icon sprTree icon-article pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The majority of your content will be added to this page via the "Content" tab.{/p}  {p}Additional layout options are available which can be added via the "Page Components" folder directly below this page.{/p}  {p}By adding new components you will be able to add more advanced layout options to this page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Page layout: Default page layout will be displayed if nothing is selected.     If 'Content full width' is selected sub navigation will be hidden.
		///</summary>
		[ImplementPropertyType("pageLayout")]
		public string PageLayout
		{
			get { return this.GetPropertyValue<string>("pageLayout"); }
		}

		///<summary>
		/// Listing image: Image will be cropped to 1140px x 854px if displayed in a vertical list.    Image will be cropped to 400px x 300px if displayed in a grid list.
		///</summary>
		[ImplementPropertyType("pageListingImage")]
		public IPublishedContent PageListingImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("pageListingImage"); }
		}

		///<summary>
		/// Listing image alt text
		///</summary>
		[ImplementPropertyType("pageListingImageAltText")]
		public string PageListingImageAltText
		{
			get { return this.GetPropertyValue<string>("pageListingImageAltText"); }
		}

		///<summary>
		/// Post summary: If nothing is entered here the summary will be extracted from the beginning of the "Main Content" of your post and the character count will be based on the settings defined on your "Blog Landing Page".
		///</summary>
		[ImplementPropertyType("pageSummary")]
		public IHtmlString PageSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("pageSummary"); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("postAuthor")]
		public IEnumerable<IPublishedContent> PostAuthor
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("postAuthor"); }
		}

		///<summary>
		/// Categories: If selecting a child category make sure you also select the parent categories.
		///</summary>
		[ImplementPropertyType("postCategories")]
		public IEnumerable<IPublishedContent> PostCategories
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("postCategories"); }
		}

		///<summary>
		/// Post date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Hide outro strip section: Select "Yes" to hide the outro strip section if content has been added to "Global Settings".
		///</summary>
		[ImplementPropertyType("hideOutroStripSection")]
		public bool HideOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetHideOutroStripSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("outroAnimate")]
		public bool OutroAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.
		///</summary>
		[ImplementPropertyType("outroBackgroundColor")]
		public string OutroBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("outroBackgroundImage")]
		public IPublishedContent OutroBackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("outroBackgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption OutroBackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroBackgroundImageOptions(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("outroButtonColor")]
		public string OutroButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("outroHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading OutroHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroHeading(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLink")]
		public Umbraco.Web.Models.RelatedLinks OutroLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroLink(this); }
		}

		///<summary>
		/// Text: If text is added here it will override the default text added in "Global Settings"
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOutroText(this); }
		}

		///<summary>
		/// Override default outro strip section: Select "Yes" to override the default outro stip section if content has been added to "Global Settings" and use the content entered below.
		///</summary>
		[ImplementPropertyType("overrideDefaultOutroStripSection")]
		public bool OverrideDefaultOutroStripSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_OutroStrip.GetOverrideDefaultOutroStripSection(this); }
		}

		///<summary>
		/// Custom body classes: Override the default styles of this page by adding page specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customBodyClasses")]
		public string CustomBodyClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetCustomBodyClasses(this); }
		}

		///<summary>
		/// Hide website footer section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteFooterSection")]
		public bool HideWebsiteFooterSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteFooterSection(this); }
		}

		///<summary>
		/// Hide website header section: This setting is useful for landing pages where you want a clear 'call to action' and don't want to distract your users with other options.
		///</summary>
		[ImplementPropertyType("hideWebsiteHeaderSection")]
		public bool HideWebsiteHeaderSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetHideWebsiteHeaderSection(this); }
		}

		///<summary>
		/// Hide from all navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.    For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.    /examplepage1/  /examplepage2/this-is-a-test/    Please note that the values you use must be lowercase, not use a leading slash and not use a trailing ".aspx".
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageGenericProperties.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Breadcrumb link text: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("breadcrumbLinkText")]
		public string BreadcrumbLinkText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetBreadcrumbLinkText(this); }
		}

		///<summary>
		/// Hide breadcrumb
		///</summary>
		[ImplementPropertyType("hideBreadcrumb")]
		public bool HideBreadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_PageNavSettings.GetHideBreadcrumb(this); }
		}

		///<summary>
		/// Override default pods: Select "Yes" to override the default pods selected within "Global Settings".
		///</summary>
		[ImplementPropertyType("overrideDefaultPods")]
		public bool OverrideDefaultPods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetOverrideDefaultPods(this); }
		}

		///<summary>
		/// Pods: Select the pods you would like to appear on this page. The pods selected will only be displayed if "Yes" is selected above.
		///</summary>
		[ImplementPropertyType("pagePods")]
		public IEnumerable<IPublishedContent> PagePods
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Pods.GetPagePods(this); }
		}

		///<summary>
		/// Meta description: Use this field to enter a description for your webpage.    This is the information that is displayed by search engines when your website appears in a search listing.    Try and keep this below 155 characters.    This information will also be displayed on your website search results page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetMetaDescription(this); }
		}

		///<summary>
		/// Open Graph description: A detailed description of the piece of content, usually between 2 and 4 sentences.    This tag is technically optional, but can improve the rate at which links are read and shared.
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Open Graph image: This is an image associated with your media.    We suggest that you use an image of at least 1200x630 pixels.    If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphImage(this); }
		}

		///<summary>
		/// Open Graph title: Use this field to override the default Open Graph title of your webpage.    The default Open Graph title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetOpenGraphTitle(this); }
		}

		///<summary>
		/// Web page header title: Use this field to override the default page title of your webpage.    The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Seo.GetPageTitle(this); }
		}

		///<summary>
		/// Main content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetBodyText(this); }
		}

		///<summary>
		/// Main image: Image will be cropped to 1140px x 550px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("mainImage")]
		public IPublishedContent MainImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImage(this); }
		}

		///<summary>
		/// Main image alt text
		///</summary>
		[ImplementPropertyType("mainImageAltText")]
		public string MainImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageAltText(this); }
		}

		///<summary>
		/// Main image caption
		///</summary>
		[ImplementPropertyType("mainImageCaption")]
		public string MainImageCaption
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetMainImageCaption(this); }
		}

		///<summary>
		/// Page title: Node name will be used by default if nothing is entered.
		///</summary>
		[ImplementPropertyType("onPageTitle")]
		public string OnPageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_Content.GetOnPageTitle(this); }
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetAddColorOverlay(this); }
		}

		///<summary>
		/// Display header image section
		///</summary>
		[ImplementPropertyType("displayHeaderImageSection")]
		public bool DisplayHeaderImageSection
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetDisplayHeaderImageSection(this); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("headerAnimate")]
		public bool HeaderAnimate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderAnimate(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.     If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("headerBackgroundColor")]
		public string HeaderBackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderBackgroundColor(this); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("headerButtonColor")]
		public string HeaderButtonColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderButtonColor(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("headerHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading HeaderHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderHeading(this); }
		}

		///<summary>
		/// Image: For all Parallax and Takeover banners, your image will be cropped to 1500px by 1100px.    If you choose a 'Medium' banner style without the Parallax effect your image will be cropped to 1500px by 550px.    If you choose a 'Short' banner style without the Parallax effect your image will be cropped to 1500px by 400px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("headerImage")]
		public IPublishedContent HeaderImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImage(this); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("headerImageAltText")]
		public string HeaderImageAltText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderImageAltText(this); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("headerLink")]
		public Umbraco.Web.Models.RelatedLinks HeaderLink
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderLink(this); }
		}

		///<summary>
		/// Parallax
		///</summary>
		[ImplementPropertyType("headerParallax")]
		public bool HeaderParallax
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderParallax(this); }
		}

		///<summary>
		/// Scroll prompt
		///</summary>
		[ImplementPropertyType("headerScrollPrompt")]
		public bool HeaderScrollPrompt
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderScrollPrompt(this); }
		}

		///<summary>
		/// Header style
		///</summary>
		[ImplementPropertyType("headerStyle")]
		public string HeaderStyle
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderStyle(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("headerText")]
		public IHtmlString HeaderText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderText(this); }
		}

		///<summary>
		/// Text alignment
		///</summary>
		[ImplementPropertyType("headerTextAlignment")]
		public string HeaderTextAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetHeaderTextAlignment(this); }
		}

		///<summary>
		/// Video: MP4 format only. The image above will be displayed first before the video is downloaded.    It is recommended to use the smallest file size possible to enable quick downloads.
		///</summary>
		[ImplementPropertyType("video")]
		public IPublishedContent Video
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_Sp_HeaderSection.GetVideo(this); }
		}
	}

	/// <summary>Tabbed Listing Section</summary>
	[PublishedContentModel("USN_AC_TabbedListingSection_AN")]
	public partial class Usn_Ac_TabbedListingSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TabbedListingSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TabbedListingSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TabbedListingSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Tabbed Listing Section{i class="icon sprTree icon-thumbnail-list color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link to listings: Link to internal pages that contain sub pages. Each page you select containing sub pages will be displayed along with a menu to switch between them.    If linking to a "Blog", either link to the "Blog Landing Page" or "Blog Category Page".    Links to external pages will be ignored.    The "Caption" field is used for the tab heading and link to each listing.
		///</summary>
		[ImplementPropertyType("linkToListings")]
		public Umbraco.Web.Models.RelatedLinks LinkToListings
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("linkToListings"); }
		}

		///<summary>
		/// Pages to display: If nothing is entered, this section will be hidden.
		///</summary>
		[ImplementPropertyType("pagesToDisplay")]
		public int PagesToDisplay
		{
			get { return this.GetPropertyValue<int>("pagesToDisplay"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionHeading(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionText(this); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroLinks(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroText(this); }
		}
	}

	/// <summary>Text Section</summary>
	[PublishedContentModel("USN_SC_TextSection_AN")]
	public partial class Usn_Sc_TextSection_AN : PublishedContentModel, IUsn_Cmp_AdvancedPageSettings, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SC_TextSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Sc_TextSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Sc_TextSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text Section{i class="icon sprTree icon-notepad-alt color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}Use this item to add text between other components you have added to the page.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("textSection")]
		public IHtmlString TextSection
		{
			get { return this.GetPropertyValue<IHtmlString>("textSection"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetAnimate(this); }
		}

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[ImplementPropertyType("apsInstructions")]
		public object ApsInstructions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetApsInstructions(this); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundColor(this); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImage(this); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetBackgroundImageOptions(this); }
		}

		///<summary>
		/// Component width
		///</summary>
		[ImplementPropertyType("width")]
		public string Width
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_AdvancedPageSettings.GetWidth(this); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Text/Signup Section</summary>
	[PublishedContentModel("USN_AC_TextSignupSection_AN")]
	public partial class Usn_Ac_TextSignupSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextSignupSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextSignupSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextSignupSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text/Signup Section{i class="icon sprTree icon-article color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("link")]
		public Umbraco.Web.Models.RelatedLinks Link
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("link"); }
		}

		///<summary>
		/// Button text
		///</summary>
		[ImplementPropertyType("NewsletterbuttonText")]
		public string NewsletterbuttonText
		{
			get { return this.GetPropertyValue<string>("NewsletterbuttonText"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("newsletterHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading NewsletterHeading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("newsletterHeading"); }
		}

		///<summary>
		/// Introduction
		///</summary>
		[ImplementPropertyType("newsletterIntroduction")]
		public IHtmlString NewsletterIntroduction
		{
			get { return this.GetPropertyValue<IHtmlString>("newsletterIntroduction"); }
		}

		///<summary>
		/// Subscriber list ID: Newsletter Signup will only be available if a Subscriber List ID is available.    Use this field to override the default Subscriber List ID in "Global Settings" if present.
		///</summary>
		[ImplementPropertyType("newsletterSubscriberListID")]
		public string NewsletterSubscriberListID
		{
			get { return this.GetPropertyValue<string>("newsletterSubscriberListID"); }
		}

		///<summary>
		/// Submission message
		///</summary>
		[ImplementPropertyType("submissionMessage")]
		public IHtmlString SubmissionMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("submissionMessage"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text section before or after the newsletter signup form.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public string TextSectionPosition
		{
			get { return this.GetPropertyValue<string>("textSectionPosition"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Text/Video or Image Section</summary>
	[PublishedContentModel("USN_AC_TextVideoOrImageSection_AN")]
	public partial class Usn_Ac_TextVideoOrImageSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_TextVideoOrImageSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_TextVideoOrImageSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_TextVideoOrImageSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add spacing around image
		///</summary>
		[ImplementPropertyType("addSpacingAroundImage")]
		public bool AddSpacingAroundImage
		{
			get { return this.GetPropertyValue<bool>("addSpacingAroundImage"); }
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Image: This image is optional. If you do not upload an image and a video URL has been added, a thumbnail image will be automatically generated for you from the associated video.    Image will be cropped to 800px x 600px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("imageAltText")]
		public string ImageAltText
		{
			get { return this.GetPropertyValue<string>("imageAltText"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Text/Video or Image Section{i class="icon sprTree icon-article color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("link")]
		public Umbraco.Web.Models.RelatedLinks Link
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("link"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Text section position: Display text section before or after the video or image.
		///</summary>
		[ImplementPropertyType("textSectionPosition")]
		public string TextSectionPosition
		{
			get { return this.GetPropertyValue<string>("textSectionPosition"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("video")]
		public string Video
		{
			get { return this.GetPropertyValue<string>("video"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Thumbnail Image</summary>
	[PublishedContentModel("USN_AC_ThumbnailImage")]
	public partial class Usn_Ac_ThumbnailImage : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_ThumbnailImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_ThumbnailImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_ThumbnailImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable light window
		///</summary>
		[ImplementPropertyType("disableLightWindow")]
		public bool DisableLightWindow
		{
			get { return this.GetPropertyValue<bool>("disableLightWindow"); }
		}

		///<summary>
		/// Link: Link will only be used if light window is disabled.    The "Caption" field will be ignored however you must enter something in order to save this link.
		///</summary>
		[ImplementPropertyType("imageLink")]
		public Umbraco.Web.Models.RelatedLinks ImageLink
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("imageLink"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Thumbnail Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window image: Image will be cropped to 400px x 300px and displayed as the gallery thumbnail.    Focal point of the image is defined within your "Media" section.    The original image you upload will be displayed within the light window uncropped.
		///</summary>
		[ImplementPropertyType("lightWindowImage")]
		public IPublishedContent LightWindowImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("lightWindowImage"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Thumbnail Slider</summary>
	[PublishedContentModel("USN_AC_ThumbnailSlider_AN")]
	public partial class Usn_Ac_ThumbnailSlider_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_ThumbnailSlider_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_ThumbnailSlider_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_ThumbnailSlider_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Auto rotate speed: Enter a number here in milliseconds to enable auto rotation (e.g. 1000 = 1 seconds).
		///</summary>
		[ImplementPropertyType("autoRotateSpeed")]
		public int AutoRotateSpeed
		{
			get { return this.GetPropertyValue<int>("autoRotateSpeed"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Thumbnail Slider{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Thumbnail Image" or "Thumbnail Video" below this folder.{/p}{p}The order of your "items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionHeading(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionText(this); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroLinks(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroText(this); }
		}
	}

	/// <summary>Thumbnail Video</summary>
	[PublishedContentModel("USN_AC_ThumbnailVideo")]
	public partial class Usn_Ac_ThumbnailVideo : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_ThumbnailVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_ThumbnailVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_ThumbnailVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Thumbnail Video{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your image within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.    Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("thumbnailImage")]
		public IPublishedContent ThumbnailImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("thumbnailImage"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("video")]
		public string Video
		{
			get { return this.GetPropertyValue<string>("video"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Video Pod</summary>
	[PublishedContentModel("USN_SWP_VideoPod")]
	public partial class Usn_Swp_VideoPod : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_SWP_VideoPod";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Swp_VideoPod(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Swp_VideoPod, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Video Pod{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Thumbnail image: This image is optional. If you do not upload an image, a thumbnail image will be automatically generated for you from the associated video.    Image will be cropped to 400px x 300px.    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("podThumbnailImage")]
		public IPublishedContent PodThumbnailImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("podThumbnailImage"); }
		}

		///<summary>
		/// Video: Copy the full URL for your video from the address bar. (YouTube or Vimeo only)
		///</summary>
		[ImplementPropertyType("podVideo")]
		public string PodVideo
		{
			get { return this.GetPropertyValue<string>("podVideo"); }
		}

		///<summary>
		/// Thumbnail image alt text
		///</summary>
		[ImplementPropertyType("thumbnailImageAltText")]
		public string ThumbnailImageAltText
		{
			get { return this.GetPropertyValue<string>("thumbnailImageAltText"); }
		}
	}

	/// <summary>Website Configuration Section</summary>
	[PublishedContentModel("USNWebsiteConfigurationSection")]
	public partial class UsnwebsiteConfigurationSection : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USNWebsiteConfigurationSection";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UsnwebsiteConfigurationSection(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UsnwebsiteConfigurationSection, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return this.GetPropertyValue<bool>("disableDelete"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Website Configuration{i class="icon sprTree icon-settings color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}Items below this node manage your website configuration settings.{/p}  {p}{strong}DO NOT{/strong} delete this item.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}
	}

	/// <summary>Window Section</summary>
	[PublishedContentModel("USN_AC_WindowSection_AN")]
	public partial class Usn_Ac_WindowSection_AN : PublishedContentModel, IUsn_Cmp_CustomComponentClasses, IUsn_Cmp_DisableDelete, IUsn_Cmp_IntroOutro
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_WindowSection_AN";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_WindowSection_AN(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_WindowSection_AN, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Animate
		///</summary>
		[ImplementPropertyType("animate")]
		public bool Animate
		{
			get { return this.GetPropertyValue<bool>("animate"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If a background image is used, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Background image: No recommended image size.    If the image will cover the full area of the component, use a large image.    If the image will repeat, use a small image.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Background image options
		///</summary>
		[ImplementPropertyType("backgroundImageOptions")]
		public USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption BackgroundImageOptions
		{
			get { return this.GetPropertyValue<USNStarterKit.USNBackgroundOptions.Models.USNBackgroundOption>("backgroundImageOptions"); }
		}

		///<summary>
		/// Button color
		///</summary>
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor
		{
			get { return this.GetPropertyValue<string>("buttonColor"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Window Section{i class="icon sprTree icon-folder-outline color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{p}You must add at least one "Window" below this folder.{/p}{p}The order of your "items within this folder directly relates to the order your items will be displayed on this page. Use  {strong}Actions } Sort{/strong} to reorder your items.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Custom component classes: Override the default styles of this component by adding component specific classes. You should leave a space between each individual class e.g:    custom-class another-class
		///</summary>
		[ImplementPropertyType("customComponentClasses")]
		public string CustomComponentClasses
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_CustomComponentClasses.GetCustomComponentClasses(this); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("introductionHeading")]
		public USNStarterKit.USNHeading.Models.USNHeading IntroductionHeading
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionHeading(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetIntroductionText(this); }
		}

		///<summary>
		/// Links: Select the links you would like to appear in the "Outro" section of this component.    The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("outroLinks")]
		public Umbraco.Web.Models.RelatedLinks OutroLinks
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroLinks(this); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_IntroOutro.GetOutroText(this); }
		}
	}

	/// <summary>Window Section Image</summary>
	[PublishedContentModel("USN_AC_WindowSectionImage")]
	public partial class Usn_Ac_WindowSectionImage : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_WindowSectionImage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_WindowSectionImage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_WindowSectionImage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return this.GetPropertyValue<bool>("addColorOverlay"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Image: Image will be cropped to one of the following sizes depending on order within this section.    800px x 800px  800px x 400px    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Heading: Heading style chosen will not affect font size. This option is purely for setting your heading hierarchy for SEO purposes.
		///</summary>
		[ImplementPropertyType("heading")]
		public USNStarterKit.USNHeading.Models.USNHeading Heading
		{
			get { return this.GetPropertyValue<USNStarterKit.USNHeading.Models.USNHeading>("heading"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("imageAltText")]
		public string ImageAltText
		{
			get { return this.GetPropertyValue<string>("imageAltText"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Window Section Image{i class="icon sprTree icon-picture color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Link: The "Caption" field will be used for your link text.
		///</summary>
		[ImplementPropertyType("link")]
		public Umbraco.Web.Models.RelatedLinks Link
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("link"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Window Section Video</summary>
	[PublishedContentModel("USN_AC_WindowSectionVideo")]
	public partial class Usn_Ac_WindowSectionVideo : PublishedContentModel, IUsn_Cmp_DisableDelete
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "USN_AC_WindowSectionVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Usn_Ac_WindowSectionVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Usn_Ac_WindowSectionVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Add color overlay: The color overlay added to your banner will be decided based on the background color selected.
		///</summary>
		[ImplementPropertyType("addColorOverlay")]
		public bool AddColorOverlay
		{
			get { return this.GetPropertyValue<bool>("addColorOverlay"); }
		}

		///<summary>
		/// Background color: Color selected will decide what color is used for any text that appears over the background.    If the banner contains an image, use the color that works best for the text over the image.
		///</summary>
		[ImplementPropertyType("backgroundColor")]
		public string BackgroundColor
		{
			get { return this.GetPropertyValue<string>("backgroundColor"); }
		}

		///<summary>
		/// Image: Image will be cropped to one of the following sizes depending on order within this section.    800px x 800px  800px x 400px    Focal point of the image is defined within your "Media" section.
		///</summary>
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("backgroundImage"); }
		}

		///<summary>
		/// Image alt text
		///</summary>
		[ImplementPropertyType("imageAltText")]
		public string ImageAltText
		{
			get { return this.GetPropertyValue<string>("imageAltText"); }
		}

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Window Section Video{i class="icon sprTree icon-video color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[ImplementPropertyType("instructions")]
		public object Instructions
		{
			get { return this.GetPropertyValue("instructions"); }
		}

		///<summary>
		/// Light window footer: This text will be displayed below your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowFooter")]
		public string LightWindowFooter
		{
			get { return this.GetPropertyValue<string>("lightWindowFooter"); }
		}

		///<summary>
		/// Light window title: This text will be displayed above your video within the light window.
		///</summary>
		[ImplementPropertyType("lightWindowTitle")]
		public string LightWindowTitle
		{
			get { return this.GetPropertyValue<string>("lightWindowTitle"); }
		}

		///<summary>
		/// Video URL: {p}Copy the full URL for your video from the address bar. YouTube or Vimeo only){/p}
		///</summary>
		[ImplementPropertyType("videoURL")]
		public string VideoUrl
		{
			get { return this.GetPropertyValue<string>("videoURL"); }
		}

		///<summary>
		/// Disable delete: If "Yes" is selected, when a user attempts to delete this node they will be presented with a warning message indicating that this node cannot be deleted.
		///</summary>
		[ImplementPropertyType("disableDelete")]
		public bool DisableDelete
		{
			get { return Umbraco.Web.PublishedContentModels.Usn_Cmp_DisableDelete.GetDisableDelete(this); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

	/// <summary>Customer</summary>
	[PublishedContentModel("customer")]
	public partial class Customer : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "customer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Customer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Customer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Company Name: Name of your organization
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return this.GetPropertyValue<string>("companyName"); }
		}

		///<summary>
		/// First Name
		///</summary>
		[ImplementPropertyType("firstName")]
		public string FirstName
		{
			get { return this.GetPropertyValue<string>("firstName"); }
		}

		///<summary>
		/// Last Name
		///</summary>
		[ImplementPropertyType("lastName")]
		public string LastName
		{
			get { return this.GetPropertyValue<string>("lastName"); }
		}

		///<summary>
		/// Salutation: Salutation or title
		///</summary>
		[ImplementPropertyType("salutation")]
		public string Salutation
		{
			get { return this.GetPropertyValue<string>("salutation"); }
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

	/// <summary>Provider</summary>
	[PublishedContentModel("provider")]
	public partial class Provider : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "provider";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Provider(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Provider, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
